{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/xampp/htdocs/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/xampp/htdocs/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport PersistanceManager from \"../../persistance/PersistanceManager\";\nimport UserLogicException from \"../error/UserLogicException\";\nvar _id = /*#__PURE__*/_classPrivateFieldLooseKey(\"id\");\nvar _email = /*#__PURE__*/_classPrivateFieldLooseKey(\"email\");\nvar _user_name = /*#__PURE__*/_classPrivateFieldLooseKey(\"user_name\");\nvar _isAdmin = /*#__PURE__*/_classPrivateFieldLooseKey(\"isAdmin\");\nclass User {\n  constructor(id, email, user_name, isadmin) {\n    Object.defineProperty(this, _id, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _email, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _user_name, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isAdmin, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _id)[_id] = id;\n    _classPrivateFieldLooseBase(this, _email)[_email] = email;\n    _classPrivateFieldLooseBase(this, _user_name)[_user_name] = user_name;\n    _classPrivateFieldLooseBase(this, _isAdmin)[_isAdmin] = isadmin;\n  }\n  getIsAdmin() {\n    return _classPrivateFieldLooseBase(this, _isAdmin)[_isAdmin];\n  }\n  getUserName() {\n    return _classPrivateFieldLooseBase(this, _user_name)[_user_name];\n  }\n  description() {\n    return \"Name: \" + this.user_name + \"\\nEmail: \" + this.email;\n  }\n  static async doLogin(username, passwd) {\n    const data = username !== '' && passwd !== '' ? {\n      username: username,\n      password: passwd\n    } : {};\n    const ret = await PersistanceManager.doPost(data, 'login.php');\n    if (ret[\"error\"]) {\n      throw new UserLogicException(\"error\", ret[\"errorMessage\"]);\n    }\n    const user = new User(ret[\"user\"][\"id\"], ret[\"user\"][\"email\"], ret[\"user\"][\"user_name\"], ret[\"user\"][\"isAdmin\"]);\n    new UserLogicException(\"success\", \"Login avvenuto con successo\");\n    return user;\n  }\n}\nexport default User;","map":{"version":3,"names":["PersistanceManager","UserLogicException","_id","_classPrivateFieldLooseKey","_email","_user_name","_isAdmin","User","constructor","id","email","user_name","isadmin","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","getIsAdmin","getUserName","description","doLogin","username","passwd","data","password","ret","doPost","user"],"sources":["C:/xampp/htdocs/Gestionale/test-gestionalejs/src/businesslogic/user/User.js"],"sourcesContent":["import PersistanceManager from \"../../persistance/PersistanceManager\";\r\nimport UserLogicException from \"../error/UserLogicException\";\r\n\r\nclass User {\r\n    #id;\r\n    #email;\r\n    #user_name;\r\n    #isAdmin;\r\n    constructor (id, email, user_name, isadmin,) {\r\n        this.#id = id;\r\n        this.#email = email;\r\n        this.#user_name = user_name;\r\n        this.#isAdmin = isadmin;\r\n    }\r\n\r\n    getIsAdmin() {\r\n        return this.#isAdmin;\r\n    }\r\n\r\n    getUserName() {\r\n        return this.#user_name;\r\n    }\r\n\r\n    description () {\r\n        return \"Name: \" + this.user_name + \"\\nEmail: \" + this.email;\r\n    } \r\n\r\n    static async doLogin(username, passwd) {\r\n        const data = (username !== '' && passwd !== '') ? {username: username, password: passwd} : {};\r\n\r\n        const ret = await PersistanceManager.doPost(data, 'login.php');\r\n\r\n        if (ret[\"error\"]){\r\n            throw new UserLogicException(\"error\", ret[\"errorMessage\"]);\r\n        }\r\n\r\n        const user = new User(ret[\"user\"][\"id\"], ret[\"user\"][\"email\"], ret[\"user\"][\"user_name\"], ret[\"user\"][\"isAdmin\"]);\r\n        new UserLogicException(\"success\", \"Login avvenuto con successo\");\r\n        return user;\r\n    }\r\n}\r\n\r\nexport default User;"],"mappings":";;AAAA,OAAOA,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,kBAAkB,MAAM,6BAA6B;AAAC,IAAAC,GAAA,gBAAAC,0BAAA;AAAA,IAAAC,MAAA,gBAAAD,0BAAA;AAAA,IAAAE,UAAA,gBAAAF,0BAAA;AAAA,IAAAG,QAAA,gBAAAH,0BAAA;AAE7D,MAAMI,IAAI,CAAC;EAKPC,WAAWA,CAAEC,EAAE,EAAEC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAG;IAAAC,MAAA,CAAAC,cAAA,OAAAZ,GAAA;MAAAa,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAV,MAAA;MAAAW,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAT,UAAA;MAAAU,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAR,QAAA;MAAAS,QAAA;MAAAC,KAAA;IAAA;IACzCC,2BAAA,KAAI,EAAAf,GAAA,EAAAA,GAAA,IAAOO,EAAE;IACbQ,2BAAA,KAAI,EAAAb,MAAA,EAAAA,MAAA,IAAUM,KAAK;IACnBO,2BAAA,KAAI,EAAAZ,UAAA,EAAAA,UAAA,IAAcM,SAAS;IAC3BM,2BAAA,KAAI,EAAAX,QAAA,EAAAA,QAAA,IAAYM,OAAO;EAC3B;EAEAM,UAAUA,CAAA,EAAG;IACT,OAAAD,2BAAA,CAAO,IAAI,EAAAX,QAAA,EAAAA,QAAA;EACf;EAEAa,WAAWA,CAAA,EAAG;IACV,OAAAF,2BAAA,CAAO,IAAI,EAAAZ,UAAA,EAAAA,UAAA;EACf;EAEAe,WAAWA,CAAA,EAAI;IACX,OAAO,QAAQ,GAAG,IAAI,CAACT,SAAS,GAAG,WAAW,GAAG,IAAI,CAACD,KAAK;EAC/D;EAEA,aAAaW,OAAOA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IACnC,MAAMC,IAAI,GAAIF,QAAQ,KAAK,EAAE,IAAIC,MAAM,KAAK,EAAE,GAAI;MAACD,QAAQ,EAAEA,QAAQ;MAAEG,QAAQ,EAAEF;IAAM,CAAC,GAAG,CAAC,CAAC;IAE7F,MAAMG,GAAG,GAAG,MAAM1B,kBAAkB,CAAC2B,MAAM,CAACH,IAAI,EAAE,WAAW,CAAC;IAE9D,IAAIE,GAAG,CAAC,OAAO,CAAC,EAAC;MACb,MAAM,IAAIzB,kBAAkB,CAAC,OAAO,EAAEyB,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9D;IAEA,MAAME,IAAI,GAAG,IAAIrB,IAAI,CAACmB,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;IAChH,IAAIzB,kBAAkB,CAAC,SAAS,EAAE,6BAA6B,CAAC;IAChE,OAAO2B,IAAI;EACf;AACJ;AAEA,eAAerB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}