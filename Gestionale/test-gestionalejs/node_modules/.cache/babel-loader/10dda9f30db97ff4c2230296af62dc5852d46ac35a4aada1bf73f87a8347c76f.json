{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Gestionale\\\\test-gestionalejs\\\\src\\\\error\\\\error.js\",\n  _s = $RefreshSig$();\nimport LogicManager from \"../businesslogic/LogicManager\";\nimport { Alert } from '@mui/material';\n//import CheckIcon from '@mui/icons-material/Check';\nimport '../css/error/error.css';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Error = ({\n  setError\n}) => {\n  _s();\n  const [message, setMessage] = useState([]);\n  useEffect(() => {\n    setMessage(prev => [...prev, LogicManager.getInstance().getExceptionManager().getErrorList()]);\n  }, []);\n  // let message = LogicManager.getInstance().getExceptionManager().getErrorList();\n  let i = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: message.length && message.map(item => /*#__PURE__*/_jsxDEV(Alert, {\n      onClick: () => {\n        message = LogicManager.getInstance().getExceptionManager().popError();\n        if (message.length < 1) {\n          setError(false);\n        }\n      },\n      severity: \"error\",\n      children: item + i\n    }, i++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }, this);\n};\n_s(Error, \"+AkkQNjth8UU2+OuxvcDlyoPmxg=\");\n_c = Error;\nexport default Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["LogicManager","Alert","useState","useEffect","jsxDEV","_jsxDEV","Error","setError","_s","message","setMessage","prev","getInstance","getExceptionManager","getErrorList","i","className","children","length","map","item","onClick","popError","severity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Gestionale/test-gestionalejs/src/error/error.js"],"sourcesContent":["import LogicManager from \"../businesslogic/LogicManager\";\r\nimport {Alert} from '@mui/material';\r\n//import CheckIcon from '@mui/icons-material/Check';\r\nimport '../css/error/error.css' \r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\nconst Error = ({ setError }) => {\r\n    const [message, setMessage] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setMessage(prev => [...prev, LogicManager.getInstance().getExceptionManager().getErrorList()]);\r\n    }, [])\r\n    // let message = LogicManager.getInstance().getExceptionManager().getErrorList();\r\n    let i = 0;  \r\n\r\n    return (<div className=\"error-container\">\r\n        {message.length && message.map(item => \r\n            <Alert key={i++} onClick={() => {\r\n                message = LogicManager.getInstance().getExceptionManager().popError();\r\n                if (message.length < 1) {\r\n                    setError(false);\r\n                }\r\n            }} severity=\"error\">\r\n                {item + i}\r\n            </Alert>) \r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default Error;"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,SAAQC,KAAK,QAAO,eAAe;AACnC;AACA,OAAO,wBAAwB;AAC/B,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACZO,UAAU,CAACC,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEX,YAAY,CAACY,WAAW,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC,CAAC;EAClG,CAAC,EAAE,EAAE,CAAC;EACN;EACA,IAAIC,CAAC,GAAG,CAAC;EAET,oBAAQV,OAAA;IAAKW,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EACnCR,OAAO,CAACS,MAAM,IAAIT,OAAO,CAACU,GAAG,CAACC,IAAI,iBAC/Bf,OAAA,CAACJ,KAAK;MAAWoB,OAAO,EAAEA,CAAA,KAAM;QAC5BZ,OAAO,GAAGT,YAAY,CAACY,WAAW,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC,CAACS,QAAQ,CAAC,CAAC;QACrE,IAAIb,OAAO,CAACS,MAAM,GAAG,CAAC,EAAE;UACpBX,QAAQ,CAAC,KAAK,CAAC;QACnB;MACJ,CAAE;MAACgB,QAAQ,EAAC,OAAO;MAAAN,QAAA,EACdG,IAAI,GAAGL;IAAC,GANDA,CAAC,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOR,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEZ,CAAC;AACV,CAAC;AAAAnB,EAAA,CArBKF,KAAK;AAAAsB,EAAA,GAALtB,KAAK;AAuBX,eAAeA,KAAK;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}