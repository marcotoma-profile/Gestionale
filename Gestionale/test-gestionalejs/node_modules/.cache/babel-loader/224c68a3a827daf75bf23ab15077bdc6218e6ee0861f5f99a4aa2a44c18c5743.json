{"ast":null,"code":"import _classPrivateFieldLooseBase from\"C:/xampp/htdocs/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";import _classPrivateFieldLooseKey from\"C:/xampp/htdocs/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";import PersistanceManager from\"../../persistance/PersistanceManager\";import UserLogicException from\"../error/UserLogicException\";var _id=/*#__PURE__*/_classPrivateFieldLooseKey(\"id\");var _email=/*#__PURE__*/_classPrivateFieldLooseKey(\"email\");var _user_name=/*#__PURE__*/_classPrivateFieldLooseKey(\"user_name\");var _isAdmin=/*#__PURE__*/_classPrivateFieldLooseKey(\"isAdmin\");class User{constructor(id,email,user_name,isadmin){Object.defineProperty(this,_id,{writable:true,value:void 0});Object.defineProperty(this,_email,{writable:true,value:void 0});Object.defineProperty(this,_user_name,{writable:true,value:void 0});Object.defineProperty(this,_isAdmin,{writable:true,value:void 0});_classPrivateFieldLooseBase(this,_id)[_id]=id;_classPrivateFieldLooseBase(this,_email)[_email]=email;_classPrivateFieldLooseBase(this,_user_name)[_user_name]=user_name;_classPrivateFieldLooseBase(this,_isAdmin)[_isAdmin]=isadmin;}getIsAdmin(){return _classPrivateFieldLooseBase(this,_isAdmin)[_isAdmin];}getUserName(){return _classPrivateFieldLooseBase(this,_user_name)[_user_name];}description(){return\"Name: \"+this.user_name+\"\\nEmail: \"+this.email;}static async doLogin(username,passwd){const data={username:username,password:passwd};const ret=await PersistanceManager.doPost(data,'login.php');if(ret[\"error\"]){throw new UserLogicException(\"error\",ret[\"errorMessage\"]);}const user=new User(ret[\"user\"][\"id\"],ret[\"user\"][\"email\"],ret[\"user\"][\"user_name\"],ret[\"user\"][\"isAdmin\"]);new UserLogicException(\"success\",\"Login avvenuto con successo\");if(ret[\"redirect\"]){window.location.href=ret[\"redirect\"];}return user;}static async doLogout(){/**\r\n         * devo pria implementare la sessione di logout dal server\r\n         */new UserLogicException('success',\"Logout avvenuto con successo\");return true;}}export default User;","map":{"version":3,"names":["PersistanceManager","UserLogicException","_id","_classPrivateFieldLooseKey","_email","_user_name","_isAdmin","User","constructor","id","email","user_name","isadmin","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","getIsAdmin","getUserName","description","doLogin","username","passwd","data","password","ret","doPost","user","window","location","href","doLogout"],"sources":["C:/xampp/htdocs/Gestionale/test-gestionalejs/src/businesslogic/user/User.js"],"sourcesContent":["import PersistanceManager from \"../../persistance/PersistanceManager\";\r\nimport UserLogicException from \"../error/UserLogicException\";\r\n\r\nclass User {\r\n    #id;\r\n    #email;\r\n    #user_name;\r\n    #isAdmin;\r\n    constructor (id, email, user_name, isadmin,) {\r\n        this.#id = id;\r\n        this.#email = email;\r\n        this.#user_name = user_name;\r\n        this.#isAdmin = isadmin;\r\n    }\r\n\r\n    getIsAdmin() {\r\n        return this.#isAdmin;\r\n    }\r\n\r\n    getUserName() {\r\n        return this.#user_name;\r\n    }\r\n\r\n    description () {\r\n        return \"Name: \" + this.user_name + \"\\nEmail: \" + this.email;\r\n    } \r\n\r\n    static async doLogin(username, passwd) {\r\n        const data = {username: username, password: passwd};\r\n\r\n        const ret = await PersistanceManager.doPost(data, 'login.php');\r\n\r\n        if (ret[\"error\"]){\r\n            throw new UserLogicException(\"error\", ret[\"errorMessage\"]);\r\n        }\r\n\r\n        const user = new User(ret[\"user\"][\"id\"], ret[\"user\"][\"email\"], ret[\"user\"][\"user_name\"], ret[\"user\"][\"isAdmin\"]);\r\n        new UserLogicException(\"success\", \"Login avvenuto con successo\");\r\n        if (ret[\"redirect\"]) {\r\n            window.location.href = ret[\"redirect\"];\r\n        }\r\n        return user;\r\n    }\r\n\r\n    static async doLogout() {\r\n        /**\r\n         * devo pria implementare la sessione di logout dal server\r\n         */\r\n        new UserLogicException('success', \"Logout avvenuto con successo\");\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default User;"],"mappings":"sTAAA,MAAO,CAAAA,kBAAkB,KAAM,sCAAsC,CACrE,MAAO,CAAAC,kBAAkB,KAAM,6BAA6B,CAAC,IAAAC,GAAA,cAAAC,0BAAA,WAAAC,MAAA,cAAAD,0BAAA,cAAAE,UAAA,cAAAF,0BAAA,kBAAAG,QAAA,cAAAH,0BAAA,YAE7D,KAAM,CAAAI,IAAK,CAKPC,WAAWA,CAAEC,EAAE,CAAEC,KAAK,CAAEC,SAAS,CAAEC,OAAO,CAAG,CAAAC,MAAA,CAAAC,cAAA,MAAAZ,GAAA,EAAAa,QAAA,MAAAC,KAAA,UAAAH,MAAA,CAAAC,cAAA,MAAAV,MAAA,EAAAW,QAAA,MAAAC,KAAA,UAAAH,MAAA,CAAAC,cAAA,MAAAT,UAAA,EAAAU,QAAA,MAAAC,KAAA,UAAAH,MAAA,CAAAC,cAAA,MAAAR,QAAA,EAAAS,QAAA,MAAAC,KAAA,UACzCC,2BAAA,KAAI,CAAAf,GAAA,EAAAA,GAAA,EAAOO,EAAE,CACbQ,2BAAA,KAAI,CAAAb,MAAA,EAAAA,MAAA,EAAUM,KAAK,CACnBO,2BAAA,KAAI,CAAAZ,UAAA,EAAAA,UAAA,EAAcM,SAAS,CAC3BM,2BAAA,KAAI,CAAAX,QAAA,EAAAA,QAAA,EAAYM,OAAO,CAC3B,CAEAM,UAAUA,CAAA,CAAG,CACT,OAAAD,2BAAA,CAAO,IAAI,CAAAX,QAAA,EAAAA,QAAA,EACf,CAEAa,WAAWA,CAAA,CAAG,CACV,OAAAF,2BAAA,CAAO,IAAI,CAAAZ,UAAA,EAAAA,UAAA,EACf,CAEAe,WAAWA,CAAA,CAAI,CACX,MAAO,QAAQ,CAAG,IAAI,CAACT,SAAS,CAAG,WAAW,CAAG,IAAI,CAACD,KAAK,CAC/D,CAEA,YAAa,CAAAW,OAAOA,CAACC,QAAQ,CAAEC,MAAM,CAAE,CACnC,KAAM,CAAAC,IAAI,CAAG,CAACF,QAAQ,CAAEA,QAAQ,CAAEG,QAAQ,CAAEF,MAAM,CAAC,CAEnD,KAAM,CAAAG,GAAG,CAAG,KAAM,CAAA1B,kBAAkB,CAAC2B,MAAM,CAACH,IAAI,CAAE,WAAW,CAAC,CAE9D,GAAIE,GAAG,CAAC,OAAO,CAAC,CAAC,CACb,KAAM,IAAI,CAAAzB,kBAAkB,CAAC,OAAO,CAAEyB,GAAG,CAAC,cAAc,CAAC,CAAC,CAC9D,CAEA,KAAM,CAAAE,IAAI,CAAG,GAAI,CAAArB,IAAI,CAACmB,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,CAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,CAChH,GAAI,CAAAzB,kBAAkB,CAAC,SAAS,CAAE,6BAA6B,CAAC,CAChE,GAAIyB,GAAG,CAAC,UAAU,CAAC,CAAE,CACjBG,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAGL,GAAG,CAAC,UAAU,CAAC,CAC1C,CACA,MAAO,CAAAE,IAAI,CACf,CAEA,YAAa,CAAAI,QAAQA,CAAA,CAAG,CACpB;AACR;AACA,WACQ,GAAI,CAAA/B,kBAAkB,CAAC,SAAS,CAAE,8BAA8B,CAAC,CACjE,MAAO,KAAI,CACf,CACJ,CAEA,cAAe,CAAAM,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}