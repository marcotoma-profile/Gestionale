{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport UserLogicException from \"../error/UserLogicException\";\nimport User from \"./User\";\nvar _currentUser = /*#__PURE__*/_classPrivateFieldLooseKey(\"currentUser\");\nvar _userLogged = /*#__PURE__*/_classPrivateFieldLooseKey(\"userLogged\");\nclass UserManager {\n  constructor() {\n    Object.defineProperty(this, _currentUser, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _userLogged, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _currentUser)[_currentUser] = new User(-1, '', false);\n    _classPrivateFieldLooseBase(this, _userLogged)[_userLogged] = false;\n  }\n  getUserLogged() {\n    return _classPrivateFieldLooseBase(this, _userLogged)[_userLogged];\n  }\n  getCurrentUser() {\n    return _classPrivateFieldLooseBase(this, _currentUser)[_currentUser];\n  }\n  async doLogin(username, passwd) {\n    _classPrivateFieldLooseBase(this, _currentUser)[_currentUser] = await User.doLogin(username, passwd);\n    _classPrivateFieldLooseBase(this, _userLogged)[_userLogged] = true;\n    return _classPrivateFieldLooseBase(this, _currentUser)[_currentUser];\n  }\n  async doLogout() {\n    let ret = false;\n    if (User.doLogout()) {\n      _classPrivateFieldLooseBase(this, _currentUser)[_currentUser] = new User(-1, '', false);\n      _classPrivateFieldLooseBase(this, _userLogged)[_userLogged] = false;\n      ret = true;\n    }\n    return ret;\n  }\n  async loadUserList() {\n    if (!_classPrivateFieldLooseBase(this, _currentUser)[_currentUser].isAdmin()) {\n      new UserLogicException('error', 'Errore: non ti è permesso visualizzare la lista degli utenti.');\n      return [];\n    }\n    return await User.loadUserList(_classPrivateFieldLooseBase(this, _currentUser)[_currentUser].getUserName());\n  }\n}\nexport default UserManager;","map":{"version":3,"names":["UserLogicException","User","_currentUser","_classPrivateFieldLooseKey","_userLogged","UserManager","constructor","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","getUserLogged","getCurrentUser","doLogin","username","passwd","doLogout","ret","loadUserList","isAdmin","getUserName"],"sources":["C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/src/businesslogic/user/UserManager.js"],"sourcesContent":["import UserLogicException from \"../error/UserLogicException\";\r\nimport User from \"./User\";\r\n\r\nclass UserManager {\r\n    #currentUser;\r\n    #userLogged;\r\n\r\n    constructor() {\r\n        this.#currentUser = new User(-1, '', false);\r\n        this.#userLogged = false;\r\n    }\r\n\r\n    getUserLogged() {\r\n        return this.#userLogged;\r\n    }\r\n\r\n    getCurrentUser() {\r\n        return this.#currentUser;\r\n    }\r\n\r\n    async doLogin(username, passwd) {\r\n        this.#currentUser = await User.doLogin(username, passwd);\r\n        this.#userLogged = true;\r\n        return this.#currentUser;\r\n    }\r\n\r\n    async doLogout() {\r\n        let ret = false;\r\n        if ( User.doLogout()){\r\n            this.#currentUser = new User(-1, '', false);\r\n            this.#userLogged = false;\r\n            ret = true;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    async loadUserList() {\r\n        if (!this.#currentUser.isAdmin()) {\r\n            new UserLogicException('error', 'Errore: non ti è permesso visualizzare la lista degli utenti.');\r\n            return [];\r\n        }\r\n\r\n        return await User.loadUserList(this.#currentUser.getUserName());\r\n    }\r\n}\r\n\r\nexport default UserManager;"],"mappings":";;AAAA,OAAOA,kBAAkB,MAAM,6BAA6B;AAC5D,OAAOC,IAAI,MAAM,QAAQ;AAAC,IAAAC,YAAA,gBAAAC,0BAAA;AAAA,IAAAC,WAAA,gBAAAD,0BAAA;AAE1B,MAAME,WAAW,CAAC;EAIdC,WAAWA,CAAA,EAAG;IAAAC,MAAA,CAAAC,cAAA,OAAAN,YAAA;MAAAO,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAJ,WAAA;MAAAK,QAAA;MAAAC,KAAA;IAAA;IACVC,2BAAA,KAAI,EAAAT,YAAA,EAAAA,YAAA,IAAgB,IAAID,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC;IAC3CU,2BAAA,KAAI,EAAAP,WAAA,EAAAA,WAAA,IAAe,KAAK;EAC5B;EAEAQ,aAAaA,CAAA,EAAG;IACZ,OAAAD,2BAAA,CAAO,IAAI,EAAAP,WAAA,EAAAA,WAAA;EACf;EAEAS,cAAcA,CAAA,EAAG;IACb,OAAAF,2BAAA,CAAO,IAAI,EAAAT,YAAA,EAAAA,YAAA;EACf;EAEA,MAAMY,OAAOA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IAC5BL,2BAAA,KAAI,EAAAT,YAAA,EAAAA,YAAA,IAAgB,MAAMD,IAAI,CAACa,OAAO,CAACC,QAAQ,EAAEC,MAAM,CAAC;IACxDL,2BAAA,KAAI,EAAAP,WAAA,EAAAA,WAAA,IAAe,IAAI;IACvB,OAAAO,2BAAA,CAAO,IAAI,EAAAT,YAAA,EAAAA,YAAA;EACf;EAEA,MAAMe,QAAQA,CAAA,EAAG;IACb,IAAIC,GAAG,GAAG,KAAK;IACf,IAAKjB,IAAI,CAACgB,QAAQ,CAAC,CAAC,EAAC;MACjBN,2BAAA,KAAI,EAAAT,YAAA,EAAAA,YAAA,IAAgB,IAAID,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC;MAC3CU,2BAAA,KAAI,EAAAP,WAAA,EAAAA,WAAA,IAAe,KAAK;MACxBc,GAAG,GAAG,IAAI;IACd;IACA,OAAOA,GAAG;EACd;EAEA,MAAMC,YAAYA,CAAA,EAAG;IACjB,IAAI,CAACR,2BAAA,KAAI,EAAAT,YAAA,EAAAA,YAAA,EAAckB,OAAO,CAAC,CAAC,EAAE;MAC9B,IAAIpB,kBAAkB,CAAC,OAAO,EAAE,+DAA+D,CAAC;MAChG,OAAO,EAAE;IACb;IAEA,OAAO,MAAMC,IAAI,CAACkB,YAAY,CAACR,2BAAA,KAAI,EAAAT,YAAA,EAAAA,YAAA,EAAcmB,WAAW,CAAC,CAAC,CAAC;EACnE;AACJ;AAEA,eAAehB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}