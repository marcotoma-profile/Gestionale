{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Gestionale\\\\test-gestionalejs\\\\src\\\\error\\\\error.js\",\n  _s = $RefreshSig$();\nimport LogicManager from \"../businesslogic/LogicManager\";\nimport React, { useState, useEffect } from \"react\";\nimport { Alert } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Error = () => {\n  _s();\n  const [messages, setMessages] = useState(LogicManager.getInstance().getExceptionManager().getErrorList());\n  useEffect(() => {\n    if (messages.length > 0) {\n      const timer = setTimeout(() => {\n        setMessages([]); // Dopo 2 secondi, svuota l'array e rimuove gli alert\n      }, 2000);\n      return () => clearTimeout(timer); // Pulisce il timer quando il componente viene smontato\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: messages.map((item, index) => /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: item\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(Error, \"ikRkhqmtgH6wjY8V54CTX6gWRUY=\");\n_c = Error;\nexport default Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["LogicManager","React","useState","useEffect","Alert","jsxDEV","_jsxDEV","Error","_s","messages","setMessages","getInstance","getExceptionManager","getErrorList","length","timer","setTimeout","clearTimeout","className","children","map","item","index","severity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Gestionale/test-gestionalejs/src/error/error.js"],"sourcesContent":["import LogicManager from \"../businesslogic/LogicManager\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Alert } from \"@mui/material\";\r\n\r\nconst Error = () => {\r\n    const [messages, setMessages] = useState(\r\n        LogicManager.getInstance().getExceptionManager().getErrorList()\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (messages.length > 0) {\r\n            const timer = setTimeout(() => {\r\n                setMessages([]); // Dopo 2 secondi, svuota l'array e rimuove gli alert\r\n            }, 2000);\r\n\r\n            return () => clearTimeout(timer); // Pulisce il timer quando il componente viene smontato\r\n        }\r\n    }, [messages]);\r\n\r\n    return (\r\n        <div className=\"error-container\">\r\n            {messages.map((item, index) => (\r\n                <Alert key={index} severity=\"error\">\r\n                    {item}\r\n                </Alert>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Error;\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CACpCF,YAAY,CAACW,WAAW,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC,CAACC,YAAY,CAAC,CAClE,CAAC;EAEDV,SAAS,CAAC,MAAM;IACZ,IAAIM,QAAQ,CAACK,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;QAC3BN,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMO,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC;IACtC;EACJ,CAAC,EAAE,CAACN,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EAC3BV,QAAQ,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtBhB,OAAA,CAACF,KAAK;MAAamB,QAAQ,EAAC,OAAO;MAAAJ,QAAA,EAC9BE;IAAI,GADGC,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACnB,EAAA,CAxBID,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}