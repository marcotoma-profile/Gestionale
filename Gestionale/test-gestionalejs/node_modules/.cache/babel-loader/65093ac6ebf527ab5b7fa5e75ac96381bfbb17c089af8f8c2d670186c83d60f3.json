{"ast":null,"code":"import _classPrivateFieldLooseBase from \"C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js\";\nimport _classPrivateFieldLooseKey from \"C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\nimport PersistanceManager from \"../../persistance/PersistanceManager\";\nimport UserLogicException from \"../error/UserLogicException\";\nvar _id = /*#__PURE__*/_classPrivateFieldLooseKey(\"id\");\nvar _email = /*#__PURE__*/_classPrivateFieldLooseKey(\"email\");\nvar _user_name = /*#__PURE__*/_classPrivateFieldLooseKey(\"user_name\");\nvar _isAdmin = /*#__PURE__*/_classPrivateFieldLooseKey(\"isAdmin\");\nclass User {\n  constructor(id, user_name, isadmin) {\n    Object.defineProperty(this, _id, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _email, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _user_name, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isAdmin, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _id)[_id] = id;\n    _classPrivateFieldLooseBase(this, _user_name)[_user_name] = user_name;\n    _classPrivateFieldLooseBase(this, _isAdmin)[_isAdmin] = isadmin;\n  }\n  getIsAdmin() {\n    return _classPrivateFieldLooseBase(this, _isAdmin)[_isAdmin];\n  }\n  getUserName() {\n    return _classPrivateFieldLooseBase(this, _user_name)[_user_name];\n  }\n  description() {\n    return \"Name: \" + this.user_name;\n  }\n  static async doLogin(username, passwd) {\n    const data = {\n      username: username,\n      password: passwd\n    };\n    const ret = await PersistanceManager.doPost(data, 'login.php');\n    if (ret[\"error\"]) {\n      throw new UserLogicException(\"error\", ret[\"errorMessage\"]);\n    }\n    const user = new User(ret[\"user\"][\"id\"], ret[\"user\"][\"user_name\"], ret[\"user\"][\"isAdmin\"]);\n    new UserLogicException(\"success\", \"Login avvenuto con successo\");\n    if (ret[\"redirect\"]) {\n      window.location.href = ret[\"redirect\"];\n    }\n    return user;\n  }\n  static async doLogout() {\n    /**\r\n     * devo pria implementare la sessione di logout dal server\r\n     */\n    new UserLogicException('success', \"Logout avvenuto con successo\");\n    return true;\n  }\n}\nexport default User;","map":{"version":3,"names":["PersistanceManager","UserLogicException","_id","_classPrivateFieldLooseKey","_email","_user_name","_isAdmin","User","constructor","id","user_name","isadmin","Object","defineProperty","writable","value","_classPrivateFieldLooseBase","getIsAdmin","getUserName","description","doLogin","username","passwd","data","password","ret","doPost","user","window","location","href","doLogout"],"sources":["C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/src/businesslogic/user/User.js"],"sourcesContent":["import PersistanceManager from \"../../persistance/PersistanceManager\";\r\nimport UserLogicException from \"../error/UserLogicException\";\r\n\r\nclass User {\r\n    #id;\r\n    #email;\r\n    #user_name;\r\n    #isAdmin;\r\n    constructor (id, user_name, isadmin,) {\r\n        this.#id = id;\r\n        this.#user_name = user_name;\r\n        this.#isAdmin = isadmin;\r\n    }\r\n\r\n    getIsAdmin() {\r\n        return this.#isAdmin;\r\n    }\r\n\r\n    getUserName() {\r\n        return this.#user_name;\r\n    }\r\n\r\n    description () {\r\n        return \"Name: \" + this.user_name;\r\n    } \r\n\r\n    static async doLogin(username, passwd) {\r\n        const data = {username: username, password: passwd};\r\n\r\n        const ret = await PersistanceManager.doPost(data, 'login.php');\r\n\r\n        if (ret[\"error\"]){\r\n            throw new UserLogicException(\"error\", ret[\"errorMessage\"]);\r\n        }\r\n\r\n        const user = new User(ret[\"user\"][\"id\"], ret[\"user\"][\"user_name\"], ret[\"user\"][\"isAdmin\"]);\r\n        new UserLogicException(\"success\", \"Login avvenuto con successo\");\r\n        if (ret[\"redirect\"]) {\r\n            window.location.href = ret[\"redirect\"];\r\n        }\r\n        return user;\r\n    }\r\n\r\n    static async doLogout() {\r\n        /**\r\n         * devo pria implementare la sessione di logout dal server\r\n         */\r\n        new UserLogicException('success', \"Logout avvenuto con successo\");\r\n        return true;\r\n    }\r\n}\r\n\r\nexport default User;"],"mappings":";;AAAA,OAAOA,kBAAkB,MAAM,sCAAsC;AACrE,OAAOC,kBAAkB,MAAM,6BAA6B;AAAC,IAAAC,GAAA,gBAAAC,0BAAA;AAAA,IAAAC,MAAA,gBAAAD,0BAAA;AAAA,IAAAE,UAAA,gBAAAF,0BAAA;AAAA,IAAAG,QAAA,gBAAAH,0BAAA;AAE7D,MAAMI,IAAI,CAAC;EAKPC,WAAWA,CAAEC,EAAE,EAAEC,SAAS,EAAEC,OAAO,EAAG;IAAAC,MAAA,CAAAC,cAAA,OAAAX,GAAA;MAAAY,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAT,MAAA;MAAAU,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAR,UAAA;MAAAS,QAAA;MAAAC,KAAA;IAAA;IAAAH,MAAA,CAAAC,cAAA,OAAAP,QAAA;MAAAQ,QAAA;MAAAC,KAAA;IAAA;IAClCC,2BAAA,KAAI,EAAAd,GAAA,EAAAA,GAAA,IAAOO,EAAE;IACbO,2BAAA,KAAI,EAAAX,UAAA,EAAAA,UAAA,IAAcK,SAAS;IAC3BM,2BAAA,KAAI,EAAAV,QAAA,EAAAA,QAAA,IAAYK,OAAO;EAC3B;EAEAM,UAAUA,CAAA,EAAG;IACT,OAAAD,2BAAA,CAAO,IAAI,EAAAV,QAAA,EAAAA,QAAA;EACf;EAEAY,WAAWA,CAAA,EAAG;IACV,OAAAF,2BAAA,CAAO,IAAI,EAAAX,UAAA,EAAAA,UAAA;EACf;EAEAc,WAAWA,CAAA,EAAI;IACX,OAAO,QAAQ,GAAG,IAAI,CAACT,SAAS;EACpC;EAEA,aAAaU,OAAOA,CAACC,QAAQ,EAAEC,MAAM,EAAE;IACnC,MAAMC,IAAI,GAAG;MAACF,QAAQ,EAAEA,QAAQ;MAAEG,QAAQ,EAAEF;IAAM,CAAC;IAEnD,MAAMG,GAAG,GAAG,MAAMzB,kBAAkB,CAAC0B,MAAM,CAACH,IAAI,EAAE,WAAW,CAAC;IAE9D,IAAIE,GAAG,CAAC,OAAO,CAAC,EAAC;MACb,MAAM,IAAIxB,kBAAkB,CAAC,OAAO,EAAEwB,GAAG,CAAC,cAAc,CAAC,CAAC;IAC9D;IAEA,MAAME,IAAI,GAAG,IAAIpB,IAAI,CAACkB,GAAG,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC,EAAEA,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC;IAC1F,IAAIxB,kBAAkB,CAAC,SAAS,EAAE,6BAA6B,CAAC;IAChE,IAAIwB,GAAG,CAAC,UAAU,CAAC,EAAE;MACjBG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGL,GAAG,CAAC,UAAU,CAAC;IAC1C;IACA,OAAOE,IAAI;EACf;EAEA,aAAaI,QAAQA,CAAA,EAAG;IACpB;AACR;AACA;IACQ,IAAI9B,kBAAkB,CAAC,SAAS,EAAE,8BAA8B,CAAC;IACjE,OAAO,IAAI;EACf;AACJ;AAEA,eAAeM,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}