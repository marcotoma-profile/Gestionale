{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Gestionale\\\\Gestionale\\\\test-gestionalejs\\\\src\\\\settings\\\\settingpage.js\",\n  _s = $RefreshSig$();\nimport LogicManager from \"../businesslogic/LogicManager\";\nimport { useState, useEffect } from \"react\";\nimport '../css/users/users.css';\nimport ModalMainPage from \"../modal/modalMainpage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingPage = ({\n  refreshError\n}) => {\n  _s();\n  const [userList, setUserList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [modalView, setModalView] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [userId, setUserId] = useState('');\n  const loadUsers = async () => {\n    const ret = await LogicManager.getInstance().getUserManager().loadUserList();\n    if (ret.length == 0) {\n      refreshError(1);\n    }\n    setUserList(ret);\n    setLoading(false);\n  };\n  const updateUserList = usr => {\n    setUserList(prev => [...prev, usr]);\n  };\n  useEffect(() => {\n    loadUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"users-title\",\n        children: \"Lista Utenti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: \"Caricamento...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-grid\",\n        children: [userList.map(usr => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-card\",\n          onClick: () => {\n            setUserId(usr.getId());\n            setModalView('user-info');\n            setModalVisible(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name\",\n            children: usr.getUserName()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-role\",\n            children: usr.getIsAdmin() ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"admin\",\n              children: \"Amministratore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"non-admin\",\n              children: \"Non amministratore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 34\n          }, this)]\n        }, usr.getId(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 30\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-card\",\n          onClick: () => {\n            setModalView('new-user');\n            setModalVisible(true);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-name\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-role\",\n            children: \"Aggiungi un nuovo utente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 14\n    }, this), modalVisible && /*#__PURE__*/_jsxDEV(ModalMainPage, {\n      view: modalView,\n      setModalVisible: visib => setModalVisible(visib),\n      refreshError: err => refreshError(err),\n      setUserList: updateUserList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(SettingPage, \"IDAwrwViDzavnmxRI6/JqUJ4G50=\");\n_c = SettingPage;\nexport default SettingPage;\nvar _c;\n$RefreshReg$(_c, \"SettingPage\");","map":{"version":3,"names":["LogicManager","useState","useEffect","ModalMainPage","jsxDEV","_jsxDEV","SettingPage","refreshError","_s","userList","setUserList","loading","setLoading","modalView","setModalView","modalVisible","setModalVisible","userId","setUserId","loadUsers","ret","getInstance","getUserManager","loadUserList","length","updateUserList","usr","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","getId","getUserName","getIsAdmin","view","visib","err","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/src/settings/settingpage.js"],"sourcesContent":["import LogicManager from \"../businesslogic/LogicManager\";\r\nimport { useState, useEffect } from \"react\";\r\nimport '../css/users/users.css';\r\nimport ModalMainPage from \"../modal/modalMainpage.js\";\r\n\r\n\r\nconst SettingPage = ({ refreshError, }) => {\r\n    const [userList, setUserList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [modalView, setModalView] = useState('');\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [userId, setUserId] = useState('');\r\n\r\n    const loadUsers = async () => {\r\n        const ret = await LogicManager.getInstance().getUserManager().loadUserList();\r\n        if (ret.length == 0) {\r\n            refreshError(1);\r\n        }\r\n        setUserList(ret);\r\n        setLoading(false);\r\n    }\r\n\r\n    const updateUserList = (usr) => {\r\n        setUserList(prev => [...prev, usr]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"users-container\">\r\n             <div className=\"users-wrapper\">\r\n                 <h2 className=\"users-title\">Lista Utenti</h2>\r\n                 {loading ? (\r\n                     <div className=\"text-center text-gray-500\">Caricamento...</div>\r\n                 ) : (\r\n                     <div className=\"users-grid\">\r\n                         {userList.map(usr => (\r\n                             <div \r\n                                 key={usr.getId()} \r\n                                 className=\"user-card\"\r\n                                 onClick={() => {\r\n                                    setUserId(usr.getId())\r\n                                    setModalView('user-info');\r\n                                    setModalVisible(true);\r\n                                }}\r\n                             >\r\n                                 <p className=\"user-name\">{usr.getUserName()}</p>\r\n                                 <p className=\"user-role\">\r\n                                     {usr.getIsAdmin() ? (\r\n                                         <span className=\"admin\">Amministratore</span>\r\n                                     ) : (\r\n                                         <span className=\"non-admin\">Non amministratore</span>\r\n                                     )}\r\n                                 </p>\r\n                             </div>\r\n                         ))}\r\n                         <div className=\"user-card\" onClick={() => {\r\n                            setModalView('new-user');\r\n                            setModalVisible(true);\r\n                            }}>\r\n                            <div className=\"user-name\">\r\n                                +\r\n                            </div>\r\n                            <div className=\"user-role\">\r\n                                Aggiungi un nuovo utente\r\n                            </div>\r\n                         </div>\r\n                     </div>\r\n                 )}\r\n             </div>\r\n             {modalVisible && <ModalMainPage view={modalView} \r\n                setModalVisible={(visib) => setModalVisible(visib)}\r\n                refreshError={(err) => refreshError(err)} setUserList={updateUserList}/>}\r\n         </div>\r\n         \r\n     );\r\n}\r\n\r\nexport default SettingPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}