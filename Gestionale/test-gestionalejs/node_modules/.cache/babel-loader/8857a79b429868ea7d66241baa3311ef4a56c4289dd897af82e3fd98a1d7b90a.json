{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Gestionale\\\\test-gestionalejs\\\\src\\\\error\\\\error.js\";\nimport LogicManager from \"../businesslogic/LogicManager\";\nimport { Alert } from '@mui/material';\n//import CheckIcon from '@mui/icons-material/Check';\nimport '../css/error/error.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Error = ({\n  setError\n}) => {\n  const message = LogicManager.getInstance().getExceptionManager().getErrorList();\n  let i = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: message.length && message.map(item => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: item\n        }, i++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: setError(false),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, i++, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 49\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n};\n_c = Error;\nexport default Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["LogicManager","Alert","jsxDEV","_jsxDEV","Error","setError","message","getInstance","getExceptionManager","getErrorList","i","className","children","length","map","item","severity","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Gestionale/test-gestionalejs/src/error/error.js"],"sourcesContent":["import LogicManager from \"../businesslogic/LogicManager\";\r\nimport {Alert} from '@mui/material';\r\n//import CheckIcon from '@mui/icons-material/Check';\r\nimport '../css/error/error.css' \r\n\r\n\r\nconst Error = ({ setError }) => {\r\n    const message = LogicManager.getInstance().getExceptionManager().getErrorList();\r\n    let i = 0;  \r\n\r\n    return (<div className=\"error-container\">\r\n        {message.length && message.map(item => {<div key={i++}>\r\n            <Alert key={i++} severity=\"error\">\r\n                {item}\r\n            </Alert>\r\n            <div onClick={setError(false)}>X</div>\r\n        </div>}) \r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default Error;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,SAAQC,KAAK,QAAO,eAAe;AACnC;AACA,OAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5B,MAAMC,OAAO,GAAGN,YAAY,CAACO,WAAW,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;EAC/E,IAAIC,CAAC,GAAG,CAAC;EAET,oBAAQP,OAAA;IAAKQ,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EACnCN,OAAO,CAACO,MAAM,IAAIP,OAAO,CAACQ,GAAG,CAACC,IAAI,IAAI;MAAC,aAAAZ,OAAA;QAAAS,QAAA,gBACpCT,OAAA,CAACF,KAAK;UAAWe,QAAQ,EAAC,OAAO;UAAAJ,QAAA,EAC5BG;QAAI,GADGL,CAAC,EAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CAAC,eACRjB,OAAA;UAAKkB,OAAO,EAAEhB,QAAQ,CAAC,KAAK,CAAE;UAAAO,QAAA,EAAC;QAAC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAJQV,CAAC,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKhD,CAAC;IAAA,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEP,CAAC;AACV,CAAC;AAAAE,EAAA,GAbKlB,KAAK;AAeX,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}