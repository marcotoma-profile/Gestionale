{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Gestionale\\\\test-gestionalejs\\\\src\\\\error\\\\error.js\";\nimport LogicManager from \"../businesslogic/LogicManager\";\nimport { Alert } from '@mui/material';\n//import CheckIcon from '@mui/icons-material/Check';\nimport '../css/error/error.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Error = () => {\n  const message = LogicManager.getInstance().getExceptionManager().getErrorList();\n  /*const messageComponent = message.map(item => <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"error\">\r\n      {item}\r\n  </Alert>) */\n  let i = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-container\",\n    children: message.length && message.map(item => /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: item\n    }, i++, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 48\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }, this);\n};\n_c = Error;\nexport default Error;\nvar _c;\n$RefreshReg$(_c, \"Error\");","map":{"version":3,"names":["LogicManager","Alert","jsxDEV","_jsxDEV","Error","message","getInstance","getExceptionManager","getErrorList","i","className","children","length","map","item","severity","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Gestionale/test-gestionalejs/src/error/error.js"],"sourcesContent":["import LogicManager from \"../businesslogic/LogicManager\";\r\nimport {Alert} from '@mui/material';\r\n//import CheckIcon from '@mui/icons-material/Check';\r\nimport '../css/error/error.css' \r\n\r\n\r\nconst Error = () => {\r\n    const message = LogicManager.getInstance().getExceptionManager().getErrorList();\r\n    /*const messageComponent = message.map(item => <Alert icon={<CheckIcon fontSize=\"inherit\" />} severity=\"error\">\r\n        {item}\r\n    </Alert>) */ \r\n    let i = 0;  \r\n\r\n    return (<div className=\"error-container\">\r\n        {message.length && message.map(item => <Alert key={i++} severity=\"error\">\r\n            {item}\r\n        </Alert>)\r\n        }\r\n    </div>)\r\n}\r\n\r\nexport default Error;"],"mappings":";AAAA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,SAAQC,KAAK,QAAO,eAAe;AACnC;AACA,OAAO,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG/B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAChB,MAAMC,OAAO,GAAGL,YAAY,CAACM,WAAW,CAAC,CAAC,CAACC,mBAAmB,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;EAC/E;AACJ;AACA;EACI,IAAIC,CAAC,GAAG,CAAC;EAET,oBAAQN,OAAA;IAAKO,SAAS,EAAC,iBAAiB;IAAAC,QAAA,EACnCN,OAAO,CAACO,MAAM,IAAIP,OAAO,CAACQ,GAAG,CAACC,IAAI,iBAAIX,OAAA,CAACF,KAAK;MAAWc,QAAQ,EAAC,OAAO;MAAAJ,QAAA,EACnEG;IAAI,GAD0CL,CAAC,EAAE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/C,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AACV,CAAC;AAAAC,EAAA,GAbKhB,KAAK;AAeX,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}