{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Gestionale\\\\Gestionale\\\\test-gestionalejs\\\\src\\\\settings\\\\settingpage.js\",\n  _s = $RefreshSig$();\nimport LogicManager from \"../businesslogic/LogicManager\";\nimport { useState, useEffect } from \"react\";\nimport '../css/users/users.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SettingPage = ({\n  setError\n}) => {\n  _s();\n  const [userList, setUserList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const loadUsers = async () => {\n    const ret = await LogicManager.getInstance().getUserManager().loadUserList();\n    if (ret.length == 0) {\n      setError(1);\n    }\n    setUserList(ret);\n    setLoading(false);\n  };\n  useEffect(() => {\n    loadUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"users-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"users-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"users-title\",\n        children: \"Lista Utenti\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: \"Caricamento...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 22\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"users-grid\",\n        children: userList.map(usr => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-name\",\n            children: usr.getUserName()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"user-role\",\n            children: usr.getIsAdmin() ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"admin\",\n              children: \"Amministratore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 42\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"non-admin\",\n              children: \"Non amministratore\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 42\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 34\n          }, this)]\n        }, usr.getId(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(SettingPage, \"IFfCR4NlBAHPjPJqjU8I781vjgc=\");\n_c = SettingPage;\nexport default SettingPage;\nvar _c;\n$RefreshReg$(_c, \"SettingPage\");","map":{"version":3,"names":["LogicManager","useState","useEffect","jsxDEV","_jsxDEV","SettingPage","setError","_s","userList","setUserList","loading","setLoading","loadUsers","ret","getInstance","getUserManager","loadUserList","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","usr","getUserName","getIsAdmin","getId","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/Gestionale/Gestionale/test-gestionalejs/src/settings/settingpage.js"],"sourcesContent":["import LogicManager from \"../businesslogic/LogicManager\";\r\nimport { useState, useEffect } from \"react\";\r\nimport '../css/users/users.css';\r\n\r\n\r\nconst SettingPage = ({setError}) => {\r\n    const [userList, setUserList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const loadUsers = async () => {\r\n        const ret = await LogicManager.getInstance().getUserManager().loadUserList();\r\n        if (ret.length == 0) {\r\n            setError(1);\r\n        }\r\n        setUserList(ret);\r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"users-container\">\r\n             <div className=\"users-wrapper\">\r\n                 <h2 className=\"users-title\">Lista Utenti</h2>\r\n                 {loading ? (\r\n                     <div className=\"text-center text-gray-500\">Caricamento...</div>\r\n                 ) : (\r\n                     <div className=\"users-grid\">\r\n                         {userList.map(usr => (\r\n                             <div \r\n                                 key={usr.getId()} \r\n                                 className=\"user-card\"\r\n                             >\r\n                                 <p className=\"user-name\">{usr.getUserName()}</p>\r\n                                 <p className=\"user-role\">\r\n                                     {usr.getIsAdmin() ? (\r\n                                         <span className=\"admin\">Amministratore</span>\r\n                                     ) : (\r\n                                         <span className=\"non-admin\">Non amministratore</span>\r\n                                     )}\r\n                                 </p>\r\n                             </div>\r\n                         ))}\r\n                     </div>\r\n                 )}\r\n             </div>\r\n         </div>\r\n     );\r\n}\r\n\r\nexport default SettingPage;"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhC,MAAMC,WAAW,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,GAAG,GAAG,MAAMb,YAAY,CAACc,WAAW,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAACC,YAAY,CAAC,CAAC;IAC5E,IAAIH,GAAG,CAACI,MAAM,IAAI,CAAC,EAAE;MACjBX,QAAQ,CAAC,CAAC,CAAC;IACf;IACAG,WAAW,CAACI,GAAG,CAAC;IAChBF,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZU,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIR,OAAA;IAAKc,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC3Bf,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1Bf,OAAA;QAAIc,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5Cb,OAAO,gBACJN,OAAA;QAAKc,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,gBAE/DnB,OAAA;QAAKc,SAAS,EAAC,YAAY;QAAAC,QAAA,EACtBX,QAAQ,CAACgB,GAAG,CAACC,GAAG,iBACbrB,OAAA;UAEIc,SAAS,EAAC,WAAW;UAAAC,QAAA,gBAErBf,OAAA;YAAGc,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEM,GAAG,CAACC,WAAW,CAAC;UAAC;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChDnB,OAAA;YAAGc,SAAS,EAAC,WAAW;YAAAC,QAAA,EACnBM,GAAG,CAACE,UAAU,CAAC,CAAC,gBACbvB,OAAA;cAAMc,SAAS,EAAC,OAAO;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,gBAE7CnB,OAAA;cAAMc,SAAS,EAAC,WAAW;cAAAC,QAAA,EAAC;YAAkB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UACvD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA,GAVCE,GAAG,CAACG,KAAK,CAAC,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWf,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEf,CAAC;AAAAhB,EAAA,CA7CKF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA+CjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}